{"ast":null,"code":"import * as api from '../api/index';\nimport { setCurrentUser } from './currentUser';\nconst error_url = \"Error: Request failed with status code \";\nexport const signup = (authData, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.signUp(authData);\n    dispatch({\n      type: 'AUTH',\n      data\n    });\n    dispatch(setCurrentUser(JSON.parse(localStorage.getItem('Profile'))));\n    navigate('/');\n  } catch (error) {\n    if (error === `${error_url}404`) alert(\"User already Exist.\");else alert(\"Something went worng..\\nTry Again!!\");\n    console.log(error);\n  }\n};\nexport const login = (authData, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.logIn(authData);\n    dispatch({\n      type: 'AUTH',\n      data\n    });\n    dispatch(setCurrentUser(JSON.parse(localStorage.getItem('Profile'))));\n    navigate('/');\n  } catch (error) {\n    if (error === `${error_url}404`) alert(\"User don't Exist.\");else if (error == `${error_url}400`) alert(\"Invalid credentials\");else alert(\"Something went worng..\\nTry Again!!\");\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","setCurrentUser","error_url","signup","authData","navigate","dispatch","data","signUp","type","JSON","parse","localStorage","getItem","error","alert","console","log","login","logIn"],"sources":["C:/Users/Ankita/Downloads/stackoverflow-main/stackoverflow-main/frontend/src/actions/auth.js"],"sourcesContent":["import * as api from '../api/index'\nimport { setCurrentUser } from './currentUser'\n\nconst error_url = \"Error: Request failed with status code \"\nexport const signup = (authData, navigate) => async (dispatch) => {\n    try {\n        const { data } = await api.signUp(authData)\n        dispatch({ type: 'AUTH', data })\n        dispatch(setCurrentUser(JSON.parse(localStorage.getItem('Profile'))))\n        navigate('/')\n    } catch (error) {\n        if (error === `${error_url}404`) alert(\"User already Exist.\");\n        else alert(\"Something went worng..\\nTry Again!!\");\n        console.log(error)\n    }\n}\n\nexport const login = (authData, navigate) => async (dispatch) => {\n    try {\n        const { data } = await api.logIn(authData)\n        dispatch({ type: 'AUTH', data })\n        dispatch(setCurrentUser(JSON.parse(localStorage.getItem('Profile'))))\n        navigate('/')\n    } catch (error) {\n        if (error ===`${error_url}404`) alert(\"User don't Exist.\");\n        else if (error == `${error_url}400`) alert(\"Invalid credentials\");\n        else alert(\"Something went worng..\\nTry Again!!\");\n        console.log(error)\n    }\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,cAAc;AACnC,SAASC,cAAc,QAAQ,eAAe;AAE9C,MAAMC,SAAS,GAAG,yCAAyC;AAC3D,OAAO,MAAMC,MAAM,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC9D,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMP,GAAG,CAACQ,MAAM,CAACJ,QAAQ,CAAC;IAC3CE,QAAQ,CAAC;MAAEG,IAAI,EAAE,MAAM;MAAEF;IAAK,CAAC,CAAC;IAChCD,QAAQ,CAACL,cAAc,CAACS,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACrER,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC,CAAC,OAAOS,KAAK,EAAE;IACZ,IAAIA,KAAK,KAAM,GAAEZ,SAAU,KAAI,EAAEa,KAAK,CAAC,qBAAqB,CAAC,CAAC,KACzDA,KAAK,CAAC,qCAAqC,CAAC;IACjDC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMI,KAAK,GAAGA,CAACd,QAAQ,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC7D,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMP,GAAG,CAACmB,KAAK,CAACf,QAAQ,CAAC;IAC1CE,QAAQ,CAAC;MAAEG,IAAI,EAAE,MAAM;MAAEF;IAAK,CAAC,CAAC;IAChCD,QAAQ,CAACL,cAAc,CAACS,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACrER,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC,CAAC,OAAOS,KAAK,EAAE;IACZ,IAAIA,KAAK,KAAK,GAAEZ,SAAU,KAAI,EAAEa,KAAK,CAAC,mBAAmB,CAAC,CAAC,KACtD,IAAID,KAAK,IAAK,GAAEZ,SAAU,KAAI,EAAEa,KAAK,CAAC,qBAAqB,CAAC,CAAC,KAC7DA,KAAK,CAAC,qCAAqC,CAAC;IACjDC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EACtB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}