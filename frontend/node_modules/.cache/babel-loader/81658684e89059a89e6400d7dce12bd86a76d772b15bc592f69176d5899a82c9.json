{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankita\\\\Desktop\\\\stackoverflow-main\\\\stackoverflow-main\\\\frontend\\\\src\\\\components\\\\Subscription\\\\Subscription.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LeftSidebar from '../../components/LeftSidebar/LeftSidebar';\nimport './Subscription.css';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Subscription = () => {\n  _s();\n  const [planId, setPlanId] = useState('');\n  const [customerId, setCustomerId] = useState('');\n  const [subscription, setSubscription] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const stripePromise = loadStripe('YOUR_STRIPE_PUBLISHABLE_KEY');\n  const handleSubscribe = async () => {\n    if (planId && customerId) {\n      try {\n        const stripe = await stripePromise;\n\n        // Create payment method using Stripe library\n        const {\n          error,\n          paymentMethod\n        } = await stripe.createPaymentMethod({\n          type: 'card',\n          card: {\n            // Add card details here\n          }\n        });\n        if (error) {\n          setErrorMessage(error.message);\n          return;\n        }\n\n        // Send the payment method and other details to your server to create a subscription\n        const response = await fetch('/subscriptions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            paymentMethodId: paymentMethod.id,\n            planId,\n            customerId\n          })\n        });\n        const {\n          subscription\n        } = await response.json();\n\n        // Set the created subscription\n        setSubscription(subscription);\n        setErrorMessage('');\n      } catch (error) {\n        setErrorMessage('Failed to create a subscription. Please try again.');\n      }\n    } else {\n      setErrorMessage('Please select a plan and provide a customer ID.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subscription-container\",\n    children: [/*#__PURE__*/_jsxDEV(LeftSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subscription-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Subscription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"plan-id\",\n          children: \"Plan:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"plan-id\",\n          value: planId,\n          onChange: e => setPlanId(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"free\",\n            children: \"Free Plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"silver\",\n            children: \"Silver Plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"gold\",\n            children: \"Gold Plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"customer-id\",\n          children: \"Customer ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"customer-id\",\n          value: customerId,\n          onChange: e => setCustomerId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"subscribe-btn\",\n        onClick: handleSubscribe,\n        children: \"Subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 26\n      }, this), subscription && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subscription-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Subscription created:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Plan: \", subscription.plan.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", subscription.plan.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Questions Remaining: \", subscription.questionsRemaining]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Subscription, \"tLTVgQQiqDQr733JTua07SNxVs0=\");\n_c = Subscription;\nexport default Subscription;\nvar _c;\n$RefreshReg$(_c, \"Subscription\");","map":{"version":3,"names":["React","useState","LeftSidebar","loadStripe","jsxDEV","_jsxDEV","Subscription","_s","planId","setPlanId","customerId","setCustomerId","subscription","setSubscription","errorMessage","setErrorMessage","stripePromise","handleSubscribe","stripe","error","paymentMethod","createPaymentMethod","type","card","message","response","fetch","method","headers","body","JSON","stringify","paymentMethodId","id","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","onChange","e","target","onClick","plan","name","price","questionsRemaining","_c","$RefreshReg$"],"sources":["C:/Users/Ankita/Desktop/stackoverflow-main/stackoverflow-main/frontend/src/components/Subscription/Subscription.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport LeftSidebar from '../../components/LeftSidebar/LeftSidebar';\r\nimport './Subscription.css';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\n\r\nconst Subscription = () => {\r\n  const [planId, setPlanId] = useState('');\r\n  const [customerId, setCustomerId] = useState('');\r\n  const [subscription, setSubscription] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const stripePromise = loadStripe('YOUR_STRIPE_PUBLISHABLE_KEY');\r\n\r\n  const handleSubscribe = async () => {\r\n    if (planId && customerId) {\r\n      try {\r\n        const stripe = await stripePromise;\r\n\r\n        // Create payment method using Stripe library\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n          type: 'card',\r\n          card: {\r\n            // Add card details here\r\n          },\r\n        });\r\n\r\n        if (error) {\r\n          setErrorMessage(error.message);\r\n          return;\r\n        }\r\n\r\n        // Send the payment method and other details to your server to create a subscription\r\n        const response = await fetch('/subscriptions', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            paymentMethodId: paymentMethod.id,\r\n            planId,\r\n            customerId,\r\n          }),\r\n        });\r\n\r\n        const { subscription } = await response.json();\r\n\r\n        // Set the created subscription\r\n        setSubscription(subscription);\r\n        setErrorMessage('');\r\n      } catch (error) {\r\n        setErrorMessage('Failed to create a subscription. Please try again.');\r\n      }\r\n    } else {\r\n      setErrorMessage('Please select a plan and provide a customer ID.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"subscription-container\">\r\n      <LeftSidebar />\r\n      <div className=\"subscription-content\">\r\n        <h1>Subscription</h1>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"plan-id\">Plan:</label>\r\n          <select id=\"plan-id\" value={planId} onChange={(e) => setPlanId(e.target.value)}>\r\n            <option value=\"\">Select a plan</option>\r\n            <option value=\"free\">Free Plan</option>\r\n            <option value=\"silver\">Silver Plan</option>\r\n            <option value=\"gold\">Gold Plan</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"customer-id\">Customer ID:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"customer-id\"\r\n            value={customerId}\r\n            onChange={(e) => setCustomerId(e.target.value)}\r\n          />\r\n        </div>\r\n        <button className=\"subscribe-btn\" onClick={handleSubscribe}>\r\n          Subscribe\r\n        </button>\r\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n        {subscription && (\r\n          <div className=\"subscription-details\">\r\n            <p>Subscription created:</p>\r\n            <p>Plan: {subscription.plan.name}</p>\r\n            <p>Price: {subscription.plan.price}</p>\r\n            <p>Questions Remaining: {subscription.questionsRemaining}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Subscription;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0CAA0C;AAClE,OAAO,oBAAoB;AAC3B,SAASC,UAAU,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMe,aAAa,GAAGb,UAAU,CAAC,6BAA6B,CAAC;EAE/D,MAAMc,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAIT,MAAM,IAAIE,UAAU,EAAE;MACxB,IAAI;QACF,MAAMQ,MAAM,GAAG,MAAMF,aAAa;;QAElC;QACA,MAAM;UAAEG,KAAK;UAAEC;QAAc,CAAC,GAAG,MAAMF,MAAM,CAACG,mBAAmB,CAAC;UAChEC,IAAI,EAAE,MAAM;UACZC,IAAI,EAAE;YACJ;UAAA;QAEJ,CAAC,CAAC;QAEF,IAAIJ,KAAK,EAAE;UACTJ,eAAe,CAACI,KAAK,CAACK,OAAO,CAAC;UAC9B;QACF;;QAEA;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,EAAE;UAC7CC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,eAAe,EAAEZ,aAAa,CAACa,EAAE;YACjCzB,MAAM;YACNE;UACF,CAAC;QACH,CAAC,CAAC;QAEF,MAAM;UAAEE;QAAa,CAAC,GAAG,MAAMa,QAAQ,CAACS,IAAI,CAAC,CAAC;;QAE9C;QACArB,eAAe,CAACD,YAAY,CAAC;QAC7BG,eAAe,CAAC,EAAE,CAAC;MACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdJ,eAAe,CAAC,oDAAoD,CAAC;MACvE;IACF,CAAC,MAAM;MACLA,eAAe,CAAC,iDAAiD,CAAC;IACpE;EACF,CAAC;EAED,oBACEV,OAAA;IAAK8B,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrC/B,OAAA,CAACH,WAAW;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACfnC,OAAA;MAAK8B,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnC/B,OAAA;QAAA+B,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBnC,OAAA;QAAK8B,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B/B,OAAA;UAAOoC,OAAO,EAAC,SAAS;UAAAL,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtCnC,OAAA;UAAQ4B,EAAE,EAAC,SAAS;UAACS,KAAK,EAAElC,MAAO;UAACmC,QAAQ,EAAGC,CAAC,IAAKnC,SAAS,CAACmC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAN,QAAA,gBAC7E/B,OAAA;YAAQqC,KAAK,EAAC,EAAE;YAAAN,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACvCnC,OAAA;YAAQqC,KAAK,EAAC,MAAM;YAAAN,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACvCnC,OAAA;YAAQqC,KAAK,EAAC,QAAQ;YAAAN,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC3CnC,OAAA;YAAQqC,KAAK,EAAC,MAAM;YAAAN,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNnC,OAAA;QAAK8B,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B/B,OAAA;UAAOoC,OAAO,EAAC,aAAa;UAAAL,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACjDnC,OAAA;UACEiB,IAAI,EAAC,MAAM;UACXW,EAAE,EAAC,aAAa;UAChBS,KAAK,EAAEhC,UAAW;UAClBiC,QAAQ,EAAGC,CAAC,IAAKjC,aAAa,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNnC,OAAA;QAAQ8B,SAAS,EAAC,eAAe;QAACW,OAAO,EAAE7B,eAAgB;QAAAmB,QAAA,EAAC;MAE5D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACR1B,YAAY,iBAAIT,OAAA;QAAG8B,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEtB;MAAY;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC/D5B,YAAY,iBACXP,OAAA;QAAK8B,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnC/B,OAAA;UAAA+B,QAAA,EAAG;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC5BnC,OAAA;UAAA+B,QAAA,GAAG,QAAM,EAACxB,YAAY,CAACmC,IAAI,CAACC,IAAI;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrCnC,OAAA;UAAA+B,QAAA,GAAG,SAAO,EAACxB,YAAY,CAACmC,IAAI,CAACE,KAAK;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvCnC,OAAA;UAAA+B,QAAA,GAAG,uBAAqB,EAACxB,YAAY,CAACsC,kBAAkB;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjC,EAAA,CA1FID,YAAY;AAAA6C,EAAA,GAAZ7C,YAAY;AA4FlB,eAAeA,YAAY;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}