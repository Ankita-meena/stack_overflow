{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankita\\\\Desktop\\\\stackoverflow-main\\\\stackoverflow-main\\\\frontend\\\\src\\\\components\\\\Chatbot\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LeftSidebar from \"../../components/LeftSidebar/LeftSidebar\";\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [otp, setOTP] = useState('');\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleAuthenticate = () => {\n    // Simulate authentication by setting the error message if the phone number is empty\n    if (phoneNumber.trim() === '') {\n      setErrorMessage('Phone number is required.');\n    } else {\n      setErrorMessage('');\n      // Handle successful authentication (you can perform additional validation here if needed)\n    }\n  };\n\n  const handleChat = () => {\n    // Simulate chatbot response by setting the answer if the question is not empty\n    if (question.trim() === '') {\n      setErrorMessage('Question is required.');\n    } else {\n      setErrorMessage('');\n      // Simulate chatbot response\n      setAnswer('This is a sample answer from the chatbot.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(LeftSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phone-number\",\n        children: \"Phone Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"phone-number\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"authenticate-btn\",\n      onClick: handleAuthenticate,\n      children: \"Authenticate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"otp\",\n        children: \"OTP:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"otp\",\n        value: otp,\n        onChange: e => setOTP(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"question\",\n        children: \"Question:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"question\",\n        value: question,\n        onChange: e => setQuestion(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chat-btn\",\n      onClick: handleChat,\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 24\n    }, this), answer && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"answer\",\n      children: [\"Answer: \", answer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"l6ekwi9BVS0+jnFzLelLalY721Q=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","LeftSidebar","jsxDEV","_jsxDEV","Chatbot","_s","phoneNumber","setPhoneNumber","otp","setOTP","question","setQuestion","answer","setAnswer","errorMessage","setErrorMessage","handleAuthenticate","trim","handleChat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ankita/Desktop/stackoverflow-main/stackoverflow-main/frontend/src/components/Chatbot/Chatbot.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport LeftSidebar from \"../../components/LeftSidebar/LeftSidebar\";\r\nimport './Chatbot.css';\r\n\r\nconst Chatbot = () => {\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [otp, setOTP] = useState('');\r\n  const [question, setQuestion] = useState('');\r\n  const [answer, setAnswer] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleAuthenticate = () => {\r\n    // Simulate authentication by setting the error message if the phone number is empty\r\n    if (phoneNumber.trim() === '') {\r\n      setErrorMessage('Phone number is required.');\r\n    } else {\r\n      setErrorMessage('');\r\n      // Handle successful authentication (you can perform additional validation here if needed)\r\n    }\r\n  };\r\n\r\n  const handleChat = () => {\r\n    // Simulate chatbot response by setting the answer if the question is not empty\r\n    if (question.trim() === '') {\r\n      setErrorMessage('Question is required.');\r\n    } else {\r\n      setErrorMessage('');\r\n      // Simulate chatbot response\r\n      setAnswer('This is a sample answer from the chatbot.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <LeftSidebar />\r\n      <h1>Chatbot</h1>\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"phone-number\">Phone Number:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"phone-number\"\r\n          value={phoneNumber}\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n        />\r\n      </div>\r\n      <button className=\"authenticate-btn\" onClick={handleAuthenticate}>\r\n        Authenticate\r\n      </button>\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"otp\">OTP:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"otp\"\r\n          value={otp}\r\n          onChange={(e) => setOTP(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"question\">Question:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"question\"\r\n          value={question}\r\n          onChange={(e) => setQuestion(e.target.value)}\r\n        />\r\n      </div>\r\n      <button className=\"chat-btn\" onClick={handleChat}>\r\n        Chat\r\n      </button>\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      {answer && <p className=\"answer\">Answer: {answer}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}