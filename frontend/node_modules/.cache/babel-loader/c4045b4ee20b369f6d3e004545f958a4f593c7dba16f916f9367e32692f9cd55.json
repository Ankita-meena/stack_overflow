{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankita\\\\Desktop\\\\stackoverflow-main\\\\stackoverflow-main\\\\frontend\\\\src\\\\components\\\\Subscription\\\\Subscription.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LeftSidebar from '../../components/LeftSidebar/LeftSidebar';\nimport './Subscription.css';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('YOUR_STRIPE_PUBLIC_KEY');\nconst Subscription = () => {\n  _s();\n  const [planId, setPlanId] = useState('');\n  const [customerId, setCustomerId] = useState('');\n  const [subscription, setSubscription] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [showCardOptions, setShowCardOptions] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const handleSubscribe = async () => {\n    if (planId && customerId && stripe && elements) {\n      try {\n        const cardElement = elements.getElement(CardElement);\n        const {\n          error: stripeError,\n          paymentMethod\n        } = await stripe.createPaymentMethod({\n          type: 'card',\n          card: cardElement\n        });\n        if (stripeError) {\n          setErrorMessage(stripeError.message);\n          return;\n        }\n        const response = await fetch('/api/subscriptions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            plan: planId,\n            customerId,\n            paymentMethodId: paymentMethod.id\n          })\n        });\n        const {\n          subscription,\n          error: serverError\n        } = await response.json();\n        if (serverError) {\n          setErrorMessage(serverError.message);\n          return;\n        }\n        setSubscription(subscription);\n        setErrorMessage('');\n      } catch (error) {\n        setErrorMessage('Failed to create a subscription. Please try again.');\n      }\n    } else {\n      setErrorMessage('Please select a plan and provide a customer ID.');\n    }\n  };\n  const toggleCardOptions = () => {\n    setShowCardOptions(!showCardOptions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subscription-container\",\n    children: [/*#__PURE__*/_jsxDEV(LeftSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subscription-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Subscription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"plan-id\",\n            children: \"Plan:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"plan-id\",\n            value: planId,\n            onChange: e => setPlanId(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"free\",\n              children: \"Free Plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"silver\",\n              children: \"Silver Plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gold\",\n              children: \"Gold Plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"customer-id\",\n            children: \"Customer ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"customer-id\",\n            value: customerId,\n            onChange: e => setCustomerId(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"payment-option\",\n            onClick: toggleCardOptions,\n            children: \"Payment Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), showCardOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-options\",\n            children: /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"subscribe-btn\",\n          onClick: handleSubscribe,\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 28\n        }, this), subscription && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subscription-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Subscription created:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Plan: \", subscription.plan.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: \", subscription.plan.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Questions Remaining: \", subscription.questionsRemaining]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Subscription, \"1NqA6qW7Wb7/mKskvs6jLUQ2x98=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = Subscription;\nconst SubscriptionWithStripe = () => /*#__PURE__*/_jsxDEV(Elements, {\n  stripe: stripePromise,\n  children: /*#__PURE__*/_jsxDEV(Subscription, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 120,\n  columnNumber: 3\n}, this);\n_c2 = SubscriptionWithStripe;\nexport default SubscriptionWithStripe;\nvar _c, _c2;\n$RefreshReg$(_c, \"Subscription\");\n$RefreshReg$(_c2, \"SubscriptionWithStripe\");","map":{"version":3,"names":["React","useState","LeftSidebar","loadStripe","CardElement","Elements","useElements","useStripe","jsxDEV","_jsxDEV","stripePromise","Subscription","_s","planId","setPlanId","customerId","setCustomerId","subscription","setSubscription","errorMessage","setErrorMessage","showCardOptions","setShowCardOptions","stripe","elements","handleSubscribe","cardElement","getElement","error","stripeError","paymentMethod","createPaymentMethod","type","card","message","response","fetch","method","headers","body","JSON","stringify","plan","paymentMethodId","id","serverError","json","toggleCardOptions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","onChange","e","target","onClick","name","price","questionsRemaining","_c","SubscriptionWithStripe","_c2","$RefreshReg$"],"sources":["C:/Users/Ankita/Desktop/stackoverflow-main/stackoverflow-main/frontend/src/components/Subscription/Subscription.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport LeftSidebar from '../../components/LeftSidebar/LeftSidebar';\r\nimport './Subscription.css';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\r\n\r\nconst stripePromise = loadStripe('YOUR_STRIPE_PUBLIC_KEY');\r\n\r\nconst Subscription = () => {\r\n  const [planId, setPlanId] = useState('');\r\n  const [customerId, setCustomerId] = useState('');\r\n  const [subscription, setSubscription] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [showCardOptions, setShowCardOptions] = useState(false);\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const handleSubscribe = async () => {\r\n    if (planId && customerId && stripe && elements) {\r\n      try {\r\n        const cardElement = elements.getElement(CardElement);\r\n\r\n        const { error: stripeError, paymentMethod } = await stripe.createPaymentMethod({\r\n          type: 'card',\r\n          card: cardElement,\r\n        });\r\n\r\n        if (stripeError) {\r\n          setErrorMessage(stripeError.message);\r\n          return;\r\n        }\r\n\r\n        const response = await fetch('/api/subscriptions', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            plan: planId,\r\n            customerId,\r\n            paymentMethodId: paymentMethod.id,\r\n          }),\r\n        });\r\n\r\n        const { subscription, error: serverError } = await response.json();\r\n\r\n        if (serverError) {\r\n          setErrorMessage(serverError.message);\r\n          return;\r\n        }\r\n\r\n        setSubscription(subscription);\r\n        setErrorMessage('');\r\n      } catch (error) {\r\n        setErrorMessage('Failed to create a subscription. Please try again.');\r\n      }\r\n    } else {\r\n      setErrorMessage('Please select a plan and provide a customer ID.');\r\n    }\r\n  };\r\n\r\n  const toggleCardOptions = () => {\r\n    setShowCardOptions(!showCardOptions);\r\n  };\r\n\r\n  return (\r\n    <div className=\"subscription-container\">\r\n      <LeftSidebar />\r\n      <div className=\"subscription-content\">\r\n        <h1>Subscription</h1>\r\n        <div className=\"output-group\">\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"plan-id\">Plan:</label>\r\n            <select id=\"plan-id\" value={planId} onChange={(e) => setPlanId(e.target.value)}>\r\n              <option value=\"\">Select a plan</option>\r\n              <option value=\"free\">Free Plan</option>\r\n              <option value=\"silver\">Silver Plan</option>\r\n              <option value=\"gold\">Gold Plan</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"customer-id\">Customer ID:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"customer-id\"\r\n              value={customerId}\r\n              onChange={(e) => setCustomerId(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"payment-options\">\r\n            <button className=\"payment-option\" onClick={toggleCardOptions}>\r\n              Payment Options\r\n            </button>\r\n            {showCardOptions && (\r\n              <div className=\"card-options\">\r\n                <CardElement />\r\n              </div>\r\n            )}\r\n          </div>\r\n          <button className=\"subscribe-btn\" onClick={handleSubscribe}>\r\n            Subscribe\r\n          </button>\r\n          {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n          {subscription && (\r\n            <div className=\"subscription-details\">\r\n              <p>Subscription created:</p>\r\n              <p>Plan: {subscription.plan.name}</p>\r\n              <p>Price: {subscription.plan.price}</p>\r\n              <p>Questions Remaining: {subscription.questionsRemaining}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SubscriptionWithStripe = () => (\r\n  <Elements stripe={stripePromise}>\r\n    <Subscription />\r\n  </Elements>\r\n);\r\n\r\nexport default SubscriptionWithStripe;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}