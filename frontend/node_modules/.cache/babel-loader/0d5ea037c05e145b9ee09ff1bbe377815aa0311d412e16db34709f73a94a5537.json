{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankita\\\\Desktop\\\\stackoverflow-main\\\\stackoverflow-main\\\\frontend\\\\src\\\\components\\\\Chatbot\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LeftSidebar from \"../../components/LeftSidebar/LeftSidebar\";\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [otp, setOTP] = useState('');\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [authenticated, setAuthenticated] = useState(false);\n  const [otpVerified, setOTPVerified] = useState(false);\n  const handleAuthenticate = () => {\n    if (phoneNumber.trim() === '') {\n      setErrorMessage('Phone number is required.');\n    } else {\n      setErrorMessage('');\n      // Perform additional validation if needed\n      setAuthenticated(true);\n    }\n  };\n  const handleVerifyOTP = () => {\n    if (otp.trim() === '') {\n      setErrorMessage('OTP is required.');\n    } else {\n      setErrorMessage('');\n      // Perform OTP verification logic (you can simulate it here)\n      setOTPVerified(true);\n    }\n  };\n  const handleChat = () => {\n    if (question.trim() === '') {\n      setErrorMessage('Question is required.');\n    } else {\n      setErrorMessage('');\n      // Simulate chatbot response\n      setAnswer('This is a sample answer from the chatbot.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(LeftSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), !authenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone-number\",\n          children: \"Phone Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"phone-number\",\n          value: phoneNumber,\n          onChange: e => setPhoneNumber(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"authenticate-btn\",\n        onClick: handleAuthenticate,\n        children: \"Authenticate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), authenticated && !otpVerified && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"otp\",\n          children: \"OTP:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"otp\",\n          value: otp,\n          onChange: e => setOTP(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"verify-otp-btn\",\n        onClick: handleVerifyOTP,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), authenticated && otpVerified && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"question\",\n          children: \"Question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"question\",\n          value: question,\n          onChange: e => setQuestion(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat-btn\",\n        onClick: handleChat,\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 24\n    }, this), answer && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"answer\",\n      children: [\"Answer: \", answer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"OKFQwIVOG+OYhTE2r2YdagbdjEc=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","LeftSidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","phoneNumber","setPhoneNumber","otp","setOTP","question","setQuestion","answer","setAnswer","errorMessage","setErrorMessage","authenticated","setAuthenticated","otpVerified","setOTPVerified","handleAuthenticate","trim","handleVerifyOTP","handleChat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ankita/Desktop/stackoverflow-main/stackoverflow-main/frontend/src/components/Chatbot/Chatbot.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport LeftSidebar from \"../../components/LeftSidebar/LeftSidebar\";\r\nimport './Chatbot.css';\r\n\r\nconst Chatbot = () => {\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [otp, setOTP] = useState('');\r\n  const [question, setQuestion] = useState('');\r\n  const [answer, setAnswer] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n  const [otpVerified, setOTPVerified] = useState(false);\r\n\r\n  const handleAuthenticate = () => {\r\n    if (phoneNumber.trim() === '') {\r\n      setErrorMessage('Phone number is required.');\r\n    } else {\r\n      setErrorMessage('');\r\n      // Perform additional validation if needed\r\n      setAuthenticated(true);\r\n    }\r\n  };\r\n\r\n  const handleVerifyOTP = () => {\r\n    if (otp.trim() === '') {\r\n      setErrorMessage('OTP is required.');\r\n    } else {\r\n      setErrorMessage('');\r\n      // Perform OTP verification logic (you can simulate it here)\r\n      setOTPVerified(true);\r\n    }\r\n  };\r\n\r\n  const handleChat = () => {\r\n    if (question.trim() === '') {\r\n      setErrorMessage('Question is required.');\r\n    } else {\r\n      setErrorMessage('');\r\n      // Simulate chatbot response\r\n      setAnswer('This is a sample answer from the chatbot.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <LeftSidebar />\r\n      <h1>Chatbot</h1>\r\n      {!authenticated && (\r\n        <>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"phone-number\">Phone Number:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"phone-number\"\r\n              value={phoneNumber}\r\n              onChange={(e) => setPhoneNumber(e.target.value)}\r\n            />\r\n          </div>\r\n          <button className=\"authenticate-btn\" onClick={handleAuthenticate}>\r\n            Authenticate\r\n          </button>\r\n        </>\r\n      )}\r\n      {authenticated && !otpVerified && (\r\n        <>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"otp\">OTP:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"otp\"\r\n              value={otp}\r\n              onChange={(e) => setOTP(e.target.value)}\r\n            />\r\n          </div>\r\n          <button className=\"verify-otp-btn\" onClick={handleVerifyOTP}>\r\n            Verify OTP\r\n          </button>\r\n        </>\r\n      )}\r\n      {authenticated && otpVerified && (\r\n        <>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"question\">Question:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"question\"\r\n              value={question}\r\n              onChange={(e) => setQuestion(e.target.value)}\r\n            />\r\n          </div>\r\n          <button className=\"chat-btn\" onClick={handleChat}>\r\n            Chat\r\n          </button>\r\n        </>\r\n      )}\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      {answer && <p className=\"answer\">Answer: {answer}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}