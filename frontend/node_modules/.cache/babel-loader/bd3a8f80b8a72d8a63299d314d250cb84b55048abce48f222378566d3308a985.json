{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankita\\\\Downloads\\\\stackoverflow-main\\\\stackoverflow-main\\\\frontend\\\\src\\\\comments\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getComment } from \"../api/index\";\nimport CommentForm from \"./CommentForm\";\nimport Comment from \"./Comment\";\nimport CommentMain from \"./CommentMain\";\nimport { getComments as getCommentsApi, createComment as createCommentApi, updateComment as updateCommentApi, deleteComment as deleteCommentApi } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = _ref => {\n  _s();\n  let {\n    commentsUrl,\n    currentUserId\n  } = _ref;\n  const qid = window.location.pathname.split(\"/\")[2];\n  const [data, setData] = useState();\n  console.log(qid);\n  useEffect(() => {\n    getComment(qid).then(el => {\n      setData(el.data.data.commentData);\n      console.log(el);\n    }).catch(el => {\n      console.log(el);\n    });\n  }, [qid]);\n\n  // const [backendComments, setBackendComments] = useState([]);\n  // const [activeComment, setActiveComment] = useState(null);\n  // const rootComments = backendComments.filter(\n  //   (backendComment) => backendComment.parentId === null\n  // );\n  // const getReplies = (commentId) =>\n  //   backendComments\n  //     .filter((backendComment) => backendComment.parentId === commentId)\n  //     .sort(\n  //       (a, b) =>\n  //         new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n  //     );\n  // const addComment = (text, parentId) => {\n  //   createCommentApi(text, parentId).then((comment) => {\n  //     setBackendComments([comment, ...backendComments]);\n  //     setActiveComment(null);\n  //   });\n  // };\n\n  // const updateComment = (text, commentId) => {\n  //   updateCommentApi(text).then(() => {\n  //     const updatedBackendComments = backendComments.map((backendComment) => {\n  //       if (backendComment.id === commentId) {\n  //         return { ...backendComment, body: text };\n  //       }\n  //       return backendComment;\n  //     });\n  //     setBackendComments(updatedBackendComments);\n  //     setActiveComment(null);\n  //   });\n  // };\n  // const deleteComment = (commentId) => {\n  //   if (window.confirm(\"Are you sure you want to remove comment?\")) {\n  //     deleteCommentApi().then(() => {\n  //       const updatedBackendComments = backendComments.filter(\n  //         (backendComment) => backendComment.id !== commentId\n  //       );\n  //       setBackendComments(updatedBackendComments);\n  //     });\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   getCommentsApi().then((data) => {\n  //     setBackendComments(data);\n  //   });\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"comments-title\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-form-title\",\n      children: \"Write comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      submitLabel: \"Write\"\n      // handleSubmit={addComment}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-container\",\n      children: [console.log(\"Cdata\", data), data === null || data === void 0 ? void 0 : data.map(el => /*#__PURE__*/_jsxDEV(CommentMain, {\n        data: el\n        // comment={rootComment}\n        // replies={getReplies(rootComment.id)}\n        // activeComment={activeComment}\n        // setActiveComment={setActiveComment}\n        // addComment={addComment}\n        // deleteComment={deleteComment}\n        // updateComment={updateComment}\n        // currentUserId={currentUserId}\n      }, el._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","getComment","CommentForm","Comment","CommentMain","getComments","getCommentsApi","createComment","createCommentApi","updateComment","updateCommentApi","deleteComment","deleteCommentApi","jsxDEV","_jsxDEV","Comments","_ref","_s","commentsUrl","currentUserId","qid","window","location","pathname","split","data","setData","console","log","then","el","commentData","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","submitLabel","map","_id","_c","$RefreshReg$"],"sources":["C:/Users/Ankita/Downloads/stackoverflow-main/stackoverflow-main/frontend/src/comments/Comments.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport {getComment} from \"../api/index\"\nimport CommentForm from \"./CommentForm\";\nimport Comment from \"./Comment\";\nimport CommentMain from \"./CommentMain\"\nimport {\n  getComments as getCommentsApi,\n  createComment as createCommentApi,\n  updateComment as updateCommentApi,\n  deleteComment as deleteCommentApi,\n} from \"../api\";\n\nconst Comments = ({ commentsUrl, currentUserId }) => {\nconst qid = window.location.pathname.split(\"/\")[2]\nconst [data, setData] = useState()\nconsole.log(qid);\n\nuseEffect(() => {\n  \n  getComment(qid).then((el)=>{\n    setData(el.data.data.commentData)\n    console.log(el)\n\n  }).catch((el)=>{\n    console.log(el)\n  })\n}, [qid])\n\n  // const [backendComments, setBackendComments] = useState([]);\n  // const [activeComment, setActiveComment] = useState(null);\n  // const rootComments = backendComments.filter(\n  //   (backendComment) => backendComment.parentId === null\n  // );\n  // const getReplies = (commentId) =>\n  //   backendComments\n  //     .filter((backendComment) => backendComment.parentId === commentId)\n  //     .sort(\n  //       (a, b) =>\n  //         new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n  //     );\n  // const addComment = (text, parentId) => {\n  //   createCommentApi(text, parentId).then((comment) => {\n  //     setBackendComments([comment, ...backendComments]);\n  //     setActiveComment(null);\n  //   });\n  // };\n\n  // const updateComment = (text, commentId) => {\n  //   updateCommentApi(text).then(() => {\n  //     const updatedBackendComments = backendComments.map((backendComment) => {\n  //       if (backendComment.id === commentId) {\n  //         return { ...backendComment, body: text };\n  //       }\n  //       return backendComment;\n  //     });\n  //     setBackendComments(updatedBackendComments);\n  //     setActiveComment(null);\n  //   });\n  // };\n  // const deleteComment = (commentId) => {\n  //   if (window.confirm(\"Are you sure you want to remove comment?\")) {\n  //     deleteCommentApi().then(() => {\n  //       const updatedBackendComments = backendComments.filter(\n  //         (backendComment) => backendComment.id !== commentId\n  //       );\n  //       setBackendComments(updatedBackendComments);\n  //     });\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   getCommentsApi().then((data) => {\n  //     setBackendComments(data);\n  //   });\n  // }, []);\n\n  return (\n    <div className=\"comments\">\n      <h3 className=\"comments-title\">Comments</h3>\n      <div className=\"comment-form-title\">Write comment</div>\n      <CommentForm submitLabel=\"Write\" \n      // handleSubmit={addComment}\n       />\n      <div className=\"comments-container\">\n        {console.log(\"Cdata\",data)}\n        {data?.map((el) => (\n          <CommentMain\n            key={el._id}\n            data={el}\n            // comment={rootComment}\n            // replies={getReplies(rootComment.id)}\n            // activeComment={activeComment}\n            // setActiveComment={setActiveComment}\n            // addComment={addComment}\n            // deleteComment={deleteComment}\n            // updateComment={updateComment}\n            // currentUserId={currentUserId}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Comments;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}