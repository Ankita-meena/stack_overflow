{"ast":null,"code":"import * as api from '../api/index';\nexport const fetchAllUsers = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllUsers();\n    console.log(\"data\", data);\n    dispatch({\n      type: 'FETCH_USERS',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateProfile = (id, updateData) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateProfile(id, updateData);\n    dispatch({\n      type: 'UPDATE_CURRENT_USER',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","fetchAllUsers","dispatch","data","getAllUsers","console","log","type","payload","error","updateProfile","id","updateData"],"sources":["C:/Users/Ankita/Downloads/stackoverflow-main/stackoverflow-main/frontend/src/actions/users.js"],"sourcesContent":["import * as api from '../api/index'\n\nexport const fetchAllUsers = () => async (dispatch) => {\n    try {\n        const { data } = await api.getAllUsers()\n        console.log( \"data\", data);\n        dispatch({ type: 'FETCH_USERS', payload: data})\n    } catch (error) {\n        console.log(error)\n    }\n}\nexport const updateProfile = (id, updateData) => async (dispatch) => {\n    try{\n        const { data } = await api.updateProfile(id, updateData)\n        dispatch({ type: 'UPDATE_CURRENT_USER', payload: data })\n    }catch(error){\n        console.log(error)\n    }\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,cAAc;AAEnC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACnD,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACI,WAAW,CAAC,CAAC;IACxCC,OAAO,CAACC,GAAG,CAAE,MAAM,EAAEH,IAAI,CAAC;IAC1BD,QAAQ,CAAC;MAAEK,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAEL;IAAI,CAAC,CAAC;EACnD,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;EACtB;AACJ,CAAC;AACD,OAAO,MAAMC,aAAa,GAAGA,CAACC,EAAE,EAAEC,UAAU,KAAK,MAAOV,QAAQ,IAAK;EACjE,IAAG;IACC,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACU,aAAa,CAACC,EAAE,EAAEC,UAAU,CAAC;IACxDV,QAAQ,CAAC;MAAEK,IAAI,EAAE,qBAAqB;MAAEC,OAAO,EAAEL;IAAK,CAAC,CAAC;EAC5D,CAAC,QAAMM,KAAK,EAAC;IACTJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;EACtB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}